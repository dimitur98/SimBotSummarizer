@model SimBotUltraSummarizer.ViewModels.SignalsSearchModel

@{
    ViewBag.Title = "Signals";
    ViewBag.FullPageWidth = true;
}

<script>
    $(document).ready(function () {
        $("#GetSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("GetSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });

        $("#GetSimBotSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("GetSimBotSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });

        $("#GetHypeSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("GetHypeSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });

        $("#GetITokenSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("GetITokenSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });

        $("#LoadSimBotSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("LoadSimBotSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });

        $("#LoadHypeSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("LoadHypeSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });

        $("#LoadITokenSignals").on("click", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("LoadITokenSignals", "SignalsApi"))),
                success: function (response, status, xhr) {
                    console.log(response)
                }
            });
        });
        
        $(".is-scam-checkbox").on("change", function () {
            $.ajaxGetJson({
                url: @Html.Raw(Json.Serialize(Url.Action("UpdateScam", "SignalsApi"))),
                data: { id: $(this).prop("id"), isScam: $(this).prop("checked") },
                success: function (response, status, xhr) {
                }
            });
        });
    });
</script>

<h1>@ViewBag.Title (@Model.Response.TotalRecords.ToString("N0"))</h1>

<partial name="SearchForm" model="Model.SearchForm" />
@* <button type="button" id="GetSignals">Get Signals</button>
<button type="button" id="GetSimBotSignals">Get Sim Bot Signals</button>
<button type="button" id="GetHypeSignals">Get Hype Signals</button>
<button type="button" id="GetITokenSignals">Get IToken Signals</button>
<button type="button" id="LoadSimBotSignals">Load Sim Bot Signals</button>
<button type="button" id="LoadHypeSignals">Load Hype Signals</button>
<button type="button" id="LoadITokenSignals">Load IToken Signals</button> *@

@if (!Model.Response.Records.HasItems())
{
    <div class="alert alert-success" role="alert">
        There are no signals.
    </div>

    return;
}

<div>
    <div class="d-inline-block me-4">
        <div class="mb-1">
            <partial name="_PagedListPagerAndOptionsPartial" model="Model.ToPager(showCreateButton: false)" />
        </div>
    </div>
</div>

<div class="row">
    @foreach (var signal in Model.Response.Records)
    {
        <div class="col-md-12">
            <div class="border rounded p-3 h-100">
                @* Main Info *@
                <div class="col-md-12">
                    <table class="table w-auto">
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Address</th>
                                <th scope="col">Pair</th>
                                <th scope="col">Scam</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td style="word-break: break-all;">@signal.Name</td>
                                <td style="word-break: break-all;">@signal.Address</td>
                                <td style="word-break: break-all;">@signal.Pair</td>
                                <td>
                                    <input class="form-check-input is-scam-checkbox" type="checkbox" asp-for="@signal.IsScam" id="@signal.Id">
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                @* Dexscreener *@
                <div class="row">
                    <div class="col-md-12 col-sm-12 dex-container mb-3 ">
                        <iframe width="100%" height="100%" src="https://dexscreener.com/ethereum/@signal.Address?embed=1&theme=dark&trades=0"></iframe>
                    </div>

                    <hr>

                    @* Signals *@
                    <div class="col-md-8 col-sm-12" style="max-height: 400px; overflow:auto;">
                        <h4>Signal Data (@signal.SignalData.Count())</h4>
                        <table class="table w-auto">
                            <thead>
                                <tr>
                                    <th scope="col">MCap</th>
                                    <th scope="col">Total Calls</th>
                                    <th scope="col">Sell Tax</th>
                                    <th scope="col">Buy Tax</th>
                                    <th scope="col">Method Ids Launched</th>
                                    <th scope="col">Method Ids Rugged</th>
                                    <th scope="col">Method Ids %</th>
                                    <th scope="col">Functions Text Launched</th>
                                    <th scope="col">Functions Text Rugged</th>
                                    <th scope="col">Functions Text %</th>
                                    <th scope="col">Clog %</th>
                                    <th scope="col">Is Thrending</th>
                                    <th scope="col">Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var signalData in signal.SignalData)
                                {
                                    <tr>
                                        <td>@signalData.MCap</td>
                                        <td>@signalData.TotalCalls</td>
                                        <td>@signalData.SellTax?.ToString("N2")</td>
                                        <td>@signalData.BuyTax?.ToString("N2")</td>
                                        <td>@signalData.MethodIdsHashLaunched</td>
                                        <td>@signalData.MethodIdsHashRugged</td>
                                        <td>@signalData.MethodIdsPercent.ToString("P2")</td>
                                        <td>@signalData.FunctionsTextLaunched</td>
                                        <td>@signalData.FunctionsTextRugged</td>
                                        <td>@signalData.FunctionsTextPercent.ToString("P2")</td>
                                        <td>@(signalData.Clog.HasValue ? signalData.Clog.Value.ToString("P2") : "-")</td>
                                        <td>@(signalData.IsTrending ? "Yes" : "No")</td>
                                        <td>@signalData.Date.ToWebDateFormat(showTime: true)</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @*Eth Tracker, IToken, Hype Alarms*@
                    <div class="col-md-4 col-sm-12" style="max-height: 400px; overflow:auto;">
                        <h4>Eth Tracker Signals (@signal.EthTrackerSignals.Count())</h4>
                        @if (signal.EthTrackerSignals.Count() > 0)
                        {
                            <table class="table w-auto">
                                <thead>
                                    <tr>
                                        <th scope="col">Wallet Name</th>
                                        <th scope="col">Type</th>
                                        <th scope="col">Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var x in signal.EthTrackerSignals)
                                    {
                                        <tr>
                                            <td><a asp-action="Search" asp-controller="EthTrackerWallets" asp-route-id="@x.EthTrackerWalletId">@x.EthTrackerWallet.Name</a></td>
                                            <td>@x.EthTrackerWallet.EthTrackerType.Name</td>
                                            <td>@x.Date.ToWebDateFormat(showTime: true)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-success" role="alert">
                                There are no Eth tracking signals for this token.
                            </div>
                        }
                        <h4>Hype Alarms (@signal.HypeSignals.Count())</h4>
                        @if (@signal.HypeSignals.Count() > 0)
                        {
                            <table class="table w-auto">
                                <thead>
                                    <tr>
                                        <th scope="col">MCap</th>
                                        <th scope="col">Alarm Type</th>
                                        <th scope="col">Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var hypeSignal in signal.HypeSignals)
                                    {
                                        <tr>
                                            <td>@hypeSignal.MCap?.ToString("N2")</td>
                                            <td>@hypeSignal.AlarmType</td>
                                            <td>@hypeSignal.Date.ToWebDateFormat(showTime: true)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-success" role="alert">
                                There are no hype signals for this token.
                            </div>
                        }
                        <h4>IToken Signals (@signal.ITokens.Count())</h4>
                        @if (signal.ITokens.Count() > 0)
                        {
                            <table class="table w-auto">
                                <thead>
                                    <tr>
                                        <th scope="col">Scan</th>
                                        <th scope="col">Date</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var itoken in signal.ITokens)
                                    {
                                        <tr>
                                            <td>@itoken.Scan</td>
                                            <td>@itoken.Date.ToWebDateFormat(showTime: true)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <div class="alert alert-success" role="alert">
                                There are no IToken signals for this token.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>


